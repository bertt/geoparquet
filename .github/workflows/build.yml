# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

#on:
#  push:
#    tags:
#      - 'v*'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish geoparquet-tools
      shell: bash
      env:
        release_name: geoparquet-tools-${{ matrix.target }}
      run: |
        cd geoparquet-tools
        dotnet publish -c Release -r "${{ matrix.target }}"" -o "${{env.release_name}}"
        rm -rf *.pdb
        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${{env.release_name}}.zip" "./${{env.release_name}}/*"
        else
          tar czvf "${{env.release_name}}.tar.gz" "${{env.release_name}}"
        fi
        # Delete output directory
        rm -r "${{env.release_name}}"                
    - name: Publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: softprops/action-gh-release@v1
      with:
        files: "geoparquet-tools-${{ matrix.target }}.*"