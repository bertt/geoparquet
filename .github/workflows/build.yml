# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish geoparquet-tools
      shell: bash
      run: |
        release_name: geoparquet-tools-${{ matrix.target }}
        cd geoparquet-tools
        dotnet publish -c Release -r "${{ matrix.target }}"" -o "$release_name"
        rm -rf *.pdb
        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi
        # Delete output directory
        rm -r "$release_name"                
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "geparquet-tools-${{ matrix.target }}.*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}