//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace GeoParquet
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Parquet metadata included in the geo field.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.1.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GeoParquet
    {

        [System.Text.Json.Serialization.JsonPropertyName("version")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Version { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("primary_column")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Primary_column { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("columns")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, GeoColumn> Columns { get; set; } = new System.Collections.Generic.Dictionary<string, GeoColumn>();



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.1.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GeoColumn
    {

        [System.Text.Json.Serialization.JsonPropertyName("encoding")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Encoding { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("geometry_types")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Geometry_types { get; set; } = new System.Collections.ObjectModel.Collection<string>();


        [System.Text.Json.Serialization.JsonPropertyName("edges")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Edges Edges { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("orientation")]
        public string Orientation { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("bbox")]
        public object Bbox { get; set; }


        [System.Text.Json.Serialization.JsonPropertyName("epoch")]
        public double Epoch { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.1.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Edges
    {

        [System.Runtime.Serialization.EnumMember(Value = @"planar")]
        Planar = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"spherical")]
        Spherical = 1,


    }
}